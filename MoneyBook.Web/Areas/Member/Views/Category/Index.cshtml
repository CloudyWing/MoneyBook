@using MoneyBook.Web.Areas.Member.ViewModels.CategoryModel;

@model IndexViewModel
@{
    ViewBag.Title = "類別管理";
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "form1", enctype = "multipart/form-data" })) {
    @Html.AntiForgeryToken()
    <div class="form-group row">
        @Html.LabelFor(x => x.Condition.Name, new { @class = "col-sm-2 col-form-label" })
        <div class="col-sm-10 form-inline">
            @Html.EditorFor(x => x.Condition.Name, new { htmlAttributes = new { @class = "form-control trim", placeholder = "Category Name" } })
            &nbsp;
            @Html.EditorFor(x => x.Condition.IsContainsItem, new { htmlAttributes = new { @class = "form-check-input" } })
            @Html.LabelFor(x => x.Condition.IsContainsItem, new { @class = "form-check-label" })
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(x => x.Condition.PayTypes, new { @class = "col-sm-2 col-form-label" })
        <div class="col-sm-10">
            @Html.CheckBoxListFor(
                x => x.Condition.PayTypes, Model.PayTypes,
                new { @class = "form-check-inline", inputClass = "form-check-input", labelClass = "form-check-label" }
            )
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(x => x.Condition.OptionStates, new { @class = "col-sm-2 col-form-label" })
        <div class="col-sm-10">
            @Html.CheckBoxListFor(
                x => x.Condition.OptionStates, Model.OptionStates,
                new { @class = "form-check-inline", inputClass = "form-check-input", labelClass = "form-check-label" }
            )
        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-12">
            <button button="submit" formaction="@Url.Action("Index")" class="btn btn-primary">查詢</button>
        </div>
    </div>
}
<div id="@MoneyBookDialogUtils.DefaultDialogId" role="dialog"></div>

@section Message {
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
}

@section Buttons {
    @Ajax.ActionLink("新增", "Create", null, MoneyBookDialogUtils.CreateOpenAjaxOptions(), new { @class = "btn btn-primary" })
    @Ajax.ActionLink("新增項目", "CreateItem", null, MoneyBookDialogUtils.CreateOpenAjaxOptions(), new { @class = "btn btn-primary" })
}

@section List {
    @if (Model.DataList.Count() > 0) {
        @Html.Partial("_List", Model)
    } else {
        @Html.Partial("_NoDataPartial")
    }
}
