@model MoneyBook.Web.Areas.Member.ViewModels.CategoryModel.EditViewModel
@{
    Layout = "~/Areas/Member/Views/Shared/_DialogLayout.cshtml";
    ViewBag.Title = "類別管理";
    AjaxOptions ajaxOptions = MoneyBookDialogUtils.CreateFormAjaxOptions();
    ajaxOptions.OnSuccess = "onDialogSuccess";
}
@using (Ajax.BeginForm(null, null, ajaxOptions, new { id = "dialogForm" })) {
    @Html.AntiForgeryToken()
    if (Model.Editor.Id.HasValue) {
        @Html.HiddenFor(x => x.Editor.Id)
    }
    <div class="form-group">
        @Html.LabelFor(x => x.Editor.Name, new { @class = "col-form-label" })
        <div>
            @Html.EditorFor(x => x.Editor.Name, new { htmlAttributes = new { @class = "form-control trim", placeholder = "Category Name" } })
            @Html.ValidationMessageFor(x => x.Editor.Name, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.Editor.PayType, htmlAttributes: new { @class = "control-label" })
        <div>
            @Html.RadioButtonListFor(
                     x => x.Editor.PayType, Model.PayTypes,
                     new { @class = "form-check-inline", inputClass = "form-check-input", labelClass = "form-check-label" }
                 )
            @Html.ValidationMessageFor(x => x.Editor.PayType, "", new { @class = "text-danger" })
        </div>
    </div>
}
@section Message {
    @ViewBag.Message
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
}

@section Buttons {
    <button type="button" class="btn btn-default" data-dismiss="modal">關閉</button>
    <button type="submit" form="dialogForm"
        formaction="@Url.Action(Model.Editor.Id.HasValue ? "Edit" : "Create")" class="btn btn-primary">儲存</button>
}

@section Scripts {
    <script>
        var onDialogSuccess = function (result) {
            if (result.IsSuccess) {
                alert("執行成功!");
                $('#@MoneyBookDialogUtils.DefaultDialogId').modal('hide');
                location.reload();
            }
        };
    </script>
}